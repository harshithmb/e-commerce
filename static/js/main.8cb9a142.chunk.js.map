{"version":3,"sources":["components/Menu.js","components/Layout.js","types/type.js","components/Card.js","actions/actionCreator.js","components/Home.js","components/ErrorBoundary.js","App.js","reportWebVitals.js","reducers/productReducer.js","index.js","store/ConfigureStore.js"],"names":["connect","globalStore","count","cartProducts","length","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Layout","title","description","children","ADD_PRODUCT","GET_PRODUCTS","dispatch","addProductToCart","product","types","payload","index","name","brand","preview","price","src","alt","substring","onClick","React","Component","store","products","dispatchProducts","data","axios","get","then","response","useEffect","console","log","map","item","App","exact","path","component","Home","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","productReducer","state","createStore","applyMiddleware","thunk","ConfigureStore","ReactDOM","document","getElementById"],"mappings":"sPA2CeA,eALS,SAACC,GAAD,YAAkB,CACtCC,MAAK,OAAED,QAAF,IAAEA,GAAF,UAAEA,EAAaE,oBAAf,aAAE,EAA2BC,OAClCD,aAAY,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAaE,gBAGhBH,EAvCF,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,MAA0B,EAAnBC,aACnB,OACI,sBAAKE,UAAU,gDAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,kBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAA5J,SACI,sBAAMP,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BQ,GAAG,YAA7C,SACI,qBAAIR,UAAU,qBAAd,UACI,oBAAIA,UAAU,mBAAd,SACI,cAAC,IAAD,CACIA,UAAU,WACVS,GAAG,cAFP,oBASJ,oBAAIT,UAAU,mBAAd,SACI,eAAC,IAAD,CACIA,UAAU,WACVS,GAAG,QAFP,iBAKQ,8BAAMZ,oBCfvBa,EAXA,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAAUb,EAAgB,EAAhBA,UAC5C,OAAQ,qCACJ,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BW,IAC3B,mBAAGX,UAAU,OAAb,SAAqBY,IACrB,qBAAKZ,UAAWA,EAAhB,SAA4Ba,WCT3BC,EAAc,cAIdC,EAAe,e,iBCkBbpB,cAAQ,MAJI,SAACqB,GAAD,MAAe,CACtCC,iBAAkB,SAACC,GAAD,OAAaF,ECdvB,CACJd,KAAMiB,EACNC,QDY+CF,QAGxCvB,EAlBF,SAAC,GAA0C,IAAxCuB,EAAuC,EAAvCA,QAASD,EAA8B,EAA9BA,iBAAkBI,EAAY,EAAZA,MACjCC,EAAiDJ,EAAjDI,KAAMC,EAA2CL,EAA3CK,MAAOX,EAAoCM,EAApCN,YAAaY,EAAuBN,EAAvBM,QAAShB,EAAcU,EAAdV,GAAIiB,EAAUP,EAAVO,MAC7C,OAAQ,sBAAKzB,UAAU,iBAAf,UACJ,qBAAKA,UAAU,eAAe0B,IAAKF,EAASG,IAAI,mBAChD,sBAAK3B,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,UAA4BsB,EAA5B,MAAqCd,KACrC,mBAAGR,UAAU,YAAb,gBAA0BY,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAagB,UAAU,EAAG,MACpD,mBAAG5B,UAAU,QAAb,SAAsBuB,IACtB,oBAAGvB,UAAU,kBAAb,iBAAoCyB,EAApC,OACA,wBAAQzB,UAAU,cAAc6B,QAAS,kBAAMZ,EAAiBC,IAAhE,8BAPqCG,M,gCEoClC1B,GCxC4BmC,IAAMC,UDwClCpC,aAJS,SAACqC,GAAD,MAAY,CAChCC,SAAQ,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAOC,aALM,SAACjB,GAAD,MAAe,CACtCkB,iBAAkB,SAACC,GAAD,OAAUnB,GDjBrB,SAACA,GAEJ,OAAOoB,IAAMC,IAAI,6DAA6DC,MAC1E,SAAAC,GAAQ,OAAIvB,EAAS,CAAEd,KAAMiB,EAAoBC,QAASmB,EAASJ,iBCqBhExC,EAnCF,SAAC,GAAoC,IAAlCsC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAYtB,OAVAJ,IAAMU,WAAU,WACZN,MACD,IAOHO,QAAQC,IAAI,WAAYT,GAChB,mCACJ,cAAC,EAAD,CACItB,MAAM,kBACNC,YAAY,wBACZZ,UAAU,0CAHd,SAKKiC,EAASlC,SAAT,OAAmBkC,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAUU,KAAI,SAACC,EAAMvB,GAAP,OAAiB,cAAC,EAAD,CAC/CA,MAAOA,EACPH,QAAS0B,gBETVC,EAZH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWC,IAC3C,cAAC,IAAD,CAAOC,OAAQ,kBAAM,cAAC,EAAD,CAAQvC,MAAM,iBAAiBC,YAAY,uBCCzDuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCERO,EAAe,CACjB1B,SAAU,GACVnC,aAAc,IAGL8D,EAAiB,WAA8C,IAA7CC,EAA4C,uDAApCF,EAAoC,yCAApBzD,EAAoB,EAApBA,KAAMkB,EAAc,EAAdA,QACzD,OAAQlB,GAEJ,KAAKiB,EACD,OAAO,2BAAK0C,GAAZ,IAAmB/D,aAAa,GAAD,mBAAM+D,EAAM/D,cAAZ,CAA0BsB,MAE7D,KAAKD,EACD,OAAO,2BAAK0C,GAAZ,IAAmB5B,SAAUb,IAGjC,QACI,OAAOyC,I,QCjBb7B,ECJiB,WAKnB,OAJc8B,YACVF,EACAG,YAAgBC,MDCVC,GAEdC,IAAShB,OACP,cAAC,IAAD,CAAUlB,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFmC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.8cb9a142.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Menu = ({ count, cartProducts }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">SHOP</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item active \">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            to=\"/e-commerce\"\r\n                        >\r\n\r\n                            Home\r\n                        </Link>\r\n\r\n                    </li>\r\n                    <li className=\"nav-item active \">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            to=\"/cart\"\r\n                        >\r\n\r\n                            Cart<sup>{count}</sup>\r\n                        </Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        </nav>);\r\n}\r\n\r\nconst mapStateToProps = (globalStore) => ({\r\n    count: globalStore?.cartProducts?.length,\r\n    cartProducts: globalStore?.cartProducts\r\n})\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n\r\n","import React from 'react';\r\nimport Menu from \"./Menu\"\r\n\r\nconst Layout = ({ title, description, children, className }) => {\r\n    return (<>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4\">{title}</h1>\r\n            <p className=\"lead\">{description}</p>\r\n            <div className={className}>{children}</div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default Layout;","export const ADD_PRODUCT = 'ADD_PRODUCT';\r\n\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';//rxconst\r\n\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProduct } from '../actions/actionCreator';\r\n\r\nconst Card = ({ product, addProductToCart, index }) => {\r\n    let { name, brand, description, preview, id, price } = product\r\n    return (<div className=\"card col-3 m-2\" key={index}>\r\n        <img className=\"card-img-top\" src={preview} alt=\"Card image cap\" />\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{name} - {id}</h5>\r\n            <p className=\"card-text\">{description?.substring(0, 20)}</p>\r\n            <p className=\"black\">{brand}</p>\r\n            <p className=\"black-10 card-p\">Rs. {price} </p>\r\n            <button className=\"btn-primary\" onClick={() => addProductToCart(product)}>Add to Cart</button>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addProductToCart: (product) => dispatch(addProduct(product))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Card);\r\n\r\n// connect(mapStatetoProps, mapDispatchToProps)\r\n// mapStatetoProps => Used to consume the values from Global Store\r\n// mapDispatchToProps => Used to dispatch our data to Action","import * as types from \"../types/type\";\r\nimport axios from \"axios\";\r\n\r\n//rxaction\r\nexport const addProduct = (payload) => {\r\n    return ({\r\n        type: types.ADD_PRODUCT,\r\n        payload\r\n    })\r\n}\r\n\r\n// export const getProducts = (payload) => ({\r\n//     type: types.GET_PRODUCTS,\r\n//     payload\r\n// })\r\n\r\n\r\nexport const getProducts = () => {\r\n    return (dispatch) => {\r\n        // Return promise with success and failure actions\r\n        return axios.get('https://5fc38a07e5c28f0016f54b09.mockapi.io/ajay/shoplane').then(\r\n            response => dispatch({ type: types.GET_PRODUCTS, payload: response.data })\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts } from '../actions/actionCreator';\r\nimport Card from './Card';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport Layout from \"./Layout\";\r\n\r\nconst Home = ({ products, dispatchProducts }) => {\r\n\r\n    React.useEffect(() => {\r\n        dispatchProducts()\r\n    }, [])//[] => componentDidMount\r\n\r\n    // useEffect(() => {\r\n    //     dispatchProducts(shopLaneData)\r\n    // })//[] => componentDidMount & compoentDiDUpdate\r\n\r\n\r\n    console.log(\"products\", products)\r\n    return (<>\r\n        <Layout\r\n            title=\"Welcome to Shop\"\r\n            description=\"Our Shop is the Best!\"\r\n            className=\"d-flex flex-wrap justify-content-around\"\r\n        >\r\n            {products.length && products?.map((item, index) => <Card\r\n                index={index}\r\n                product={item}\r\n            />)}\r\n\r\n        </Layout>\r\n    </>);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchProducts: (data) => dispatch(getProducts(data))\r\n})\r\n\r\nconst mapStateToProps = (store) => ({\r\n    products: store?.products\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n        // You can also log error messages to an error reporting service here\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';// Bootstrap CSS\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\"\nimport Home from './components/Home';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/e-commerce\" component={Home} />\n        <Route render={() => <Layout title=\"Page Not Found\" description=\"404 Error\"></Layout>} />\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//import {ADD_PRODUCT, REMOVE_PRODUCT} from \"../types/type\"\r\nimport * as types from \"../types/type\"\r\n\r\n//rxreducer - reducer\r\n//rcredux - class component with redux\r\n//rxconst - constants\r\n//rxaction - action\r\n\r\n\r\nconst initialState = {\r\n    products: [],\r\n    cartProducts: []\r\n}\r\n\r\nexport const productReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case types.ADD_PRODUCT:\r\n            return { ...state, cartProducts: [...state.cartProducts, payload] }\r\n\r\n        case types.GET_PRODUCTS:\r\n            return { ...state, products: payload }\r\n        //[[], [productsArray]]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport ConfigureStore from './store/ConfigureStore';\n\nconst store = ConfigureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { productReducer } from \"../reducers/productReducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst ConfigureStore = () => {\r\n    const store = createStore(\r\n        productReducer,\r\n        applyMiddleware(thunk)\r\n    )\r\n    return (store);\r\n}\r\n\r\nexport default ConfigureStore;"],"sourceRoot":""}